<%
if ENV.key?('POSTGRES_URI') && ENV['POSTGRES_URI'].present?
  # Prefer the redis URI from the POSTGRES_URI env var if specified.
  uri = ENV['POSTGRES_URI']
elsif ENV.key?('VCAP_SERVICES')
  services = JSON.parse(ENV['VCAP_SERVICES'])
  if services['databases-for-postgresql']
    # Favour Databases for PostgreSQL service
    databases_config = services['databases-for-postgresql']
    uri = databases_config.first['credentials']['connection']['postgres']['composed'].first
    uri = uri.sub('sslmode=verify-full', 'sslmode=require')
  else
    # Last resort: Compose for PostgreSQL service
    compose_config = services['compose-for-postgresql']
    uri = compose_config.first['credentials']['uri'] unless compose_config.nil?
  end
end
fail 'No Postgres service found in environment.' unless defined?(uri) && uri.present?
%>
production:
  url: "<%= uri %>"
